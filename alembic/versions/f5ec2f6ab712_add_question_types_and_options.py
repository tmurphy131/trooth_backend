"""Add question types and options

Revision ID: f5ec2f6ab712
Revises: 70420600a9a9
Create Date: 2025-08-03 06:58:21.412884

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5ec2f6ab712'
down_revision: Union[str, None] = '70420600a9a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the QuestionType enum first
    questiontype_enum = sa.Enum('open_ended', 'multiple_choice', name='questiontype')
    questiontype_enum.create(op.get_bind())
    
    # Create the UserRole enum
    userrole_enum = sa.Enum('apprentice', 'mentor', 'admin', name='userrole')
    userrole_enum.create(op.get_bind())
    
    op.create_table('question_options',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('question_id', sa.String(), nullable=False),
    sa.Column('option_text', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Add the question_type column with a default value
    op.add_column('questions', sa.Column('question_type', questiontype_enum, nullable=True))
    
    # Update existing questions to have open_ended type
    op.execute("UPDATE questions SET question_type = 'open_ended' WHERE question_type IS NULL")
    
    # Now make the column non-nullable
    op.alter_column('questions', 'question_type', nullable=False)
    
    op.alter_column('questions', 'text',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    
    # Manually alter the users.role column to use the enum
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE userrole USING role::userrole")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'role',
               existing_type=sa.Enum('apprentice', 'mentor', 'admin', name='userrole'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('questions', 'text',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('questions', 'question_type')
    op.drop_table('question_options')
    # ### end Alembic commands ###
